React.js

Launch React:

1) Hyper Terminal
2) cd into /Users/dangalansky/my-app
3) npm start


React applications all contained in the following:
<div id="root"></div>

comes just before: 
<script src="../src/index.js" type="text/javascript"></script>

JSX- JavaScript Syntax Extension, React extension
	—> provides a way to structure component rendering using syntax similar in appearance to HTML

1) required dependencies:

	- react
	- react-dom 

2) at top of index.js

	import React from “react”;
	import ReactDOM from “react-dom”;

3) render page by tapping into ReactDOM

	ReactDOM.render( What to show, Where to Show it, optional: callback to tell us when render function has completed);

	ex) ReactDOM.render(<h1>Hello World!</h1>, document.getElementById(“root”));

4) for multiple elements, place inside <div>

	ex) ReactDOM.render(
			<div>
				<h1> Hello World </h1>
				<p> A paragraph! </p>
			</div>,
			document.getElementById(“root”)
		);

Inserting Variables

	ex) const name = “Dan”

	<h1> Hello {name} </h1> —> Renders to “Hello Dan”

	ex) injecting JS expressions into the brackets

	<h1> Your lucky number is {Math.floor(Math.random() * 10)} </h1> —> Renders to “Your lucky number is 2” 
			* randomizes 0 - 10 every reload

Expressions vs. Statements

	* expression - piece of code that results in a value

		ex) const y = 5;

		ex) const y = getAnswer();

	* statement - instruction or action

		ex) if/else statement

		ex) while loop 

CSS and Styling within JSX

1) we must update our script code to: type=“text/JSX”

2) apply all styling through classes, created in styles.css

	ex) .heading {
			color: red;
		}

3) HTML attributes must be camel-cased bc it’s JSX
		
		ex) <h1 className=“heading” contentEditable=“false”> Hello World </h1>

4) We can still target JSX elements through CSS

		ex) ul {
				color: blue;
			}
